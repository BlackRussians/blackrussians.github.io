{"version":3,"sources":["quiz.jpeg","serviceWorker.js","reducer.js","HttpMethod.js","notification.js","components/useWindowSize.js","TimeOutPage.js","NotFoundPage.js","QuizData.js","Result.js","StudentInfo.js","Quiz.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","reducer","state","action","type","loading","data","error","Error","apiUrl","config","headers","Authorization","notification","_title","_message","_type","_container","_animationIn","_animationOut","_duration","store","addNotification","title","message","container","animationIn","animationOut","dismiss","duration","useWindowSize","useState","width","undefined","height","calWidth","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","TimeOutPage","className","style","NotFoundPage","history","to","memo","checkNum","setCheckNum","index","setIndex","correctCount","setCorrectCount","isEnd","setIsEnd","result","setResult","resultData","setResultData","startTime","useRef","Date","endTime","useReducer","dispatch","postState","postDispatch","chkAnswer","quizData","correct_answer","runTime","current","question","answers","id","fetchQuiz","a","axios","get","response","postResult","useCallback","eachQuizTime","JSON","stringify","replace","grade","classNum","studentNum","name","post","project","room","student_number","score","each_quiz_time","total_end_time","parseFloat","map","v","reduce","c","toFixed","item","postResultDetail","console","log","student_data","selected_answer","isCorrect","String","runtime","then","Answers","checkedColor","backgroundColor","color","unCheckedColor","onClick","pathname","quizRound","length","totalTime","Result","Header","setGrade","setClassNum","setStudentNum","setName","submittedStudent","studentData","isStudentDataAlreadyThere","isThere","parseInt","e","fetchStudentData","handleChange","target","value","ChkStudentNum","onChange","studentNums","i","class1","push","key","class2","class3","class4","onSubmit","preventDefault","test","studentName","createTime","created_at","placeholder","Home","src","require","alt","Quiz","exact","path","component","QuizData","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,mC,mFCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2ECOSC,MAzBf,SAAiBC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,UACD,MAAO,CACHC,SAAS,EACTC,KAAM,KACNC,MAAO,MAEf,IAAK,UACD,MAAO,CACHF,SAAS,EACTC,KAAMH,EAAOG,KACbC,MAAO,MAEf,IAAK,QACD,MAAO,CACHF,SAAS,EACTC,KAAM,KACNC,MAAOJ,EAAOI,OAEtB,QACI,MAAM,IAAIC,MAAJ,iCAAoCL,EAAOC,S,iBCnBhDK,EAAS,uCACTC,EAAS,CAClBC,QAAS,CAACC,cAAc,OAAD,OAHb,yM,iBCsBCC,G,YAnBM,SAACC,EAAQC,EAAUC,GAIG,IAHrBC,EAGoB,uDAHP,gBACbC,EAEoB,uDAFN,CAAC,WAAY,UAC3BC,EACoB,uDADJ,CAAC,WAAY,SAAS,WACtCC,EAAoB,uDAAT,IAE7BC,QAAMC,gBAAgB,CAClBC,MAAOT,EACPU,QAAST,EACTX,KAAMY,EACNS,UAAWR,EACXS,YAAaR,EACbS,aAAcR,EACdS,QAAS,CACLC,SAAUT,O,cCiBPU,MAjCf,WAAyB,MAGeC,mBAAS,CACzCC,WAAOC,EACPC,YAAQD,EACRE,cAAUF,IANO,mBAGdG,EAHc,KAGFC,EAHE,KA8BrB,OArBAC,qBAAU,WAEN,SAASC,IAELF,EAAc,CACVL,MAAOnC,OAAO2C,WACdN,OAAQrC,OAAO4C,YACfN,SAA+B,GAApBtC,OAAO2C,WAAoB,MAW9C,OANA3C,OAAO6C,iBAAiB,SAAUH,GAGlCA,IAGO,kBAAM1C,OAAO8C,oBAAoB,SAAUJ,MACnD,IAEIH,GCLIQ,MAtBf,WACI,IAAMZ,EAAQF,IAAgBE,MACxBE,EAASJ,IAAgBI,OAE/B,OACI,yBAAKW,UAAU,WAAWC,MAAO,CAACd,MAAOA,EAAOE,OAAQA,IACpD,yBAAKW,UAAU,mBACX,4CACA,uBAAGA,UAAU,aAAY,sCAAzB,wGACA,6BAASA,UAAU,mBACf,0BAAMA,UAAU,QAAO,0BAAMA,UAAU,sBAAhB,MACvB,0BAAMA,UAAU,QAAO,0BAAMA,UAAU,sBAAhB,MACvB,0BAAMA,UAAU,SACZ,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,sBAAhB,UCWTE,MAxBf,YAAmC,EAAXC,QAAY,IAC1BhB,EAAQF,IAAgBE,MACxBE,EAASJ,IAAgBI,OAE/B,OACI,yBAAKW,UAAU,WAAWC,MAAO,CAACd,MAAOA,EAAOE,OAAQA,IACpD,yBAAKW,UAAU,mBACX,8CACA,uBAAGA,UAAU,aAAY,sCAAzB,oGACA,6BAASA,UAAU,mBACf,0BAAMA,UAAU,QAAO,0BAAMA,UAAU,sBAAhB,MACvB,0BAAMA,UAAU,QAAO,0BAAMA,UAAU,sBAAhB,MACvB,0BAAMA,UAAU,QAAO,0BAAMA,UAAU,sBAAhB,OAE3B,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAMI,GAAG,KACL,4BAAQJ,UAAU,aAAlB,oDC4MTK,sBAtNf,YAA0C,IAAtBF,EAAqB,EAArBA,QAASlD,EAAY,EAAZA,SAAY,EACLiC,wBAASE,GADJ,mBAC9BkB,EAD8B,KACpBC,EADoB,OAEXrB,mBAAS,GAFE,mBAE9BsB,EAF8B,KAEvBC,EAFuB,OAGGvB,mBAAS,GAHZ,mBAG9BwB,EAH8B,KAGhBC,EAHgB,OAIXzB,oBAAS,GAJE,mBAI9B0B,EAJ8B,KAIvBC,EAJuB,OAKT3B,mBAAS,IALA,mBAK9B4B,EAL8B,KAKtBC,EALsB,OAMD7B,mBAAS,IANR,mBAM9B8B,EAN8B,KAMlBC,EANkB,KAO/BC,EAAYC,iBAAO,IAAIC,MACvBC,EAAUF,iBAAO,IARc,EASXG,qBAAWlE,EAAS,CAC1CI,SAAS,EACTC,KAAM,KACNC,MAAO,OAZ0B,mBAS9BL,EAT8B,KASvBkE,EATuB,OAcHD,qBAAWlE,EAAS,CAClDI,SAAS,EACTC,KAAM,KACNC,MAAO,OAjB0B,mBAc9B8D,EAd8B,KAcnBC,EAdmB,KAqB/BC,GAAY,WACd,GAAIC,GAASnB,GAAOoB,iBAAmBtB,EAAU,CAC7C,IAAMuB,GAAWR,EAAQS,QAAUZ,EAAUY,SAAW,IACxDf,EAAU,GAAD,mBAAKD,GAAL,CAAa,CAACa,GAASnB,GAAOuB,SAAjB,UAA8BzB,EAA9B,aAA2CqB,GAASnB,GAAOwB,QAAQ1B,EAAW,IAAM,OAAQuB,MAClHZ,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAACW,GAASnB,GAAOyB,GAAjB,UAAwB3B,EAAxB,aAAqCqB,GAASnB,GAAOwB,QAAQ1B,EAAW,IAAM,OAAQuB,MACpHlB,EAAgBD,EAAe,OAE5B,CACH,IAAMmB,GAAWR,EAAQS,QAAUZ,EAAUY,SAAW,IACxDf,EAAU,GAAD,mBAAKD,GAAL,CAAa,CAACa,GAASnB,GAAOuB,SAAjB,UAA8BzB,EAA9B,aAA2CqB,GAASnB,GAAOwB,QAAQ1B,EAAW,IAAM,QAASuB,MACnHZ,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAACW,GAASnB,GAAOyB,GAAjB,UAAwB3B,EAAxB,aAAqCqB,GAASnB,GAAOwB,QAAQ1B,EAAW,IAAM,QAASuB,QAKvHK,GAAS,uCAAG,4BAAAC,EAAA,6DACdZ,EAAS,CAAEhE,KAAM,YADH,kBAGa6E,IAAMC,IAAN,UAAazE,EAAb,+BApBZ,GAoBoEC,GAHrE,OAGJyE,EAHI,OAIVf,EAAS,CAAEhE,KAAM,UAAWE,KAAM6E,EAAS7E,OAJjC,gDAMV8D,EAAS,CAAEhE,KAAM,QAASG,MAAM,EAAD,KANrB,yDAAH,qDAkBT6E,GAAaC,sBAAW,sBAAC,8CAAAL,EAAA,6DAErBM,EAAeC,KAAKC,UAAL,CAAgB,CAAC,wCAAjB,mBAA4D3B,KAC5E4B,QAAQ,MAAO,MAAMA,QAAQ,UAAW,IAAIA,QAAQ,KAAM,MAHpC,WAKqB3F,EAASI,MAA9CwF,EALgB,EAKhBA,MAAOC,EALS,EAKTA,SAAUC,EALD,EAKCA,WAAYC,EALb,EAKaA,KALb,SAMAZ,IAAMa,KAAN,UAAcrF,EAAd,mBACnB,CACIsF,QA3CG,EA4CHL,MAAOA,EACPM,KAAML,EACNM,eAAgBL,EAChBC,KAAMA,EACNK,MAAO3C,EACP4C,eAAgBb,EAChBc,eAAgBC,WAAW1C,EAAO2C,KAAI,SAACC,GAAD,OAAOA,EAAE,MAAIC,QAAO,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAIyB,KAAGC,QAAQ,KAErFhG,GAjBiB,OAMjByE,EANiB,OAmBvBb,EAAa,CAAElE,KAAM,YAnBE,cAoBJuD,GApBI,iEAoBZgD,EApBY,kBAsBbC,GAAiBD,EAAMxB,EAAS7E,KAAKwE,IAtBxB,gJAwBvBR,EAAa,CAAElE,KAAM,YACrByG,QAAQC,IAAI,SACZjG,EAAa,6EAAkB,8CAAY,OACnB,gBAAiB,CAAC,WAAY,YAAa,CAAC,WAAY,SAAU,aAAc,KA3BjF,kDA6BvBgG,QAAQC,IAAR,MA7BuB,uEA+B5B,CAACvD,EAAczD,EAASI,MAAOyD,EAAQE,IAEpC+C,GAAgB,uCAAG,WAAOL,EAAGzB,GAAV,SAAAE,EAAA,6DACrB6B,QAAQC,IAAI,wBAAUP,EAAE,IADH,kBAGXtB,IAAMa,KAAN,UAAcrF,EAAd,0BACF,CACIsG,aAAcjC,EACdF,SAAU2B,EAAE,GACZS,gBAAiBT,EAAE,GACnBU,UAAWC,OAAOX,EAAE,IACpBY,QAASZ,EAAE,IAEb7F,GAXW,sDAajBmG,QAAQC,IAAR,MAbiB,wDAAH,wDAiBtBxE,qBAAU,WACNyC,KAAYqC,SACb,IAEH9E,qBAAU,WACHmB,GACC2B,KAAagC,SAEnB,CAAC3D,EAAO2B,KAEV,IAAMiC,GAAU,WACZ,IAAMC,EAAe,CAACC,gBAAiB,gBAAiBC,MAAO,SACzDC,EAAiB,CAACF,gBAAiB,QAASC,MAAO,SAEzD,OACI,yBAAK3E,UAAU,WACX,yBAAKiC,GAAG,UACH4C,QAAS,WAAOtE,EAAY,IAC5BN,MAAoB,IAAbK,EACDmE,EACAG,GAJX,aAIkCjD,GAASnB,GAAOwB,QAAQ,KAE1D,yBAAKC,GAAG,UACH4C,QAAS,WAAOtE,EAAY,IAC5BN,MAAoB,IAAbK,EACDmE,EACAG,GAJX,aAIkCjD,GAASnB,GAAOwB,QAAQ,KAE1D,yBAAKC,GAAG,UACH4C,QAAS,WAAOtE,EAAY,IAC5BN,MAAoB,IAAbK,EACDmE,EACAG,GAJX,aAIkCjD,GAASnB,GAAOwB,QAAQ,KAE1D,yBAAKC,GAAG,UACH4C,QAAS,WAAOtE,EAAY,IAC5BN,MAAoB,IAAbK,EACDmE,EACAG,GAJX,aAIkCjD,GAASnB,GAAOwB,QAAQ,OAM9DxE,GAAmCH,EAAnCG,QAAemE,GAAoBtE,EAA1BI,KAAgBC,GAAUL,EAAVK,MACjC,YAAuB0B,IAAnBnC,EAASI,MACF,kBAAC,EAAD,MAIPG,GAAgB,6BAAK,kBAAC,oBAAD,CAAmBmH,MAAM,mBAC9CjH,GAAc,kBAAC,EAAD,MACbiE,GAUD,yBAAK3B,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,eAAc,6CAAeQ,EAAM,KAClD,yBAAKR,UAAU,iBAAgB,4BAAK2B,GAASnB,GAAOuB,WACpD,kBAACyC,GAAD,OAEJ,kBAAC,IAAD,MACChD,EAAUhE,QAAU,6BAAK,kBAAC,oBAAD,CAAmBmH,MAAM,wBAA2BvF,EAC7EwB,GAASY,EAAUhE,QACd,4BAAQwC,UAAU,wBAAlB,6BACAY,EACI,kBAAC,IAAD,CAAMR,GAAI,CACR0E,SAAU,UACVzH,MAAO,CACH0H,UAAWpD,GAASqD,OACpB3B,MAAO3C,EACPuE,UAAWzB,WAAW1C,EAAO2C,KAAI,SAACC,GAAD,OAAOA,EAAE,MAAIC,QAAO,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAIyB,KAAGC,QAAQ,OAGlF,4BAAQ7D,UAAU,sBAAsB6E,QAAS,kBAAM1E,EAAQyC,QAAQ,CAAEvF,WAAO+B,MAAhF,8BAEF,4BAAQY,UAAU,WAAW6E,QAAS,gBACnBzF,IAAbkB,EACAtC,EAAa,GAAI,qDAAc,SAC3B,gBAAiB,CAAC,WAAY,YAAa,CAAC,WAAY,SAAU,aAAc,KAEhFwC,IAAUmB,GAASqD,OAAS,GAC5B3D,EAAQS,QAAU,IAAIV,KACtBM,KACAb,GAAS,GACT7C,EAAa,2CAAc,2DAAe,OACtC,gBAAiB,CAAC,WAAY,YAAa,CAAC,WAAY,SAAU,aAAc,OAEpFqD,EAAQS,QAAU,IAAIV,KACtBM,KACAR,EAAUY,QAAU,IAAIV,KACxBX,EAASD,EAAQ,GACjBD,OAAYnB,MAhBtB,+BAhCA,QC9IX8F,MAtBf,YAA+B,IAAD,IAAZjI,SACmCI,MAAzCgG,EADkB,EAClBA,MAAO0B,EADW,EACXA,UAAWE,EADA,EACAA,UAE1B,OACI,yBAAKjF,UAAU,aACX,kBAACmF,EAAD,MACA,yBAAKnF,UAAU,UACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACX,2EACA,uCAASqD,EAAT,cAAoB0B,IACpB,wEAAiBE,EAAjB,YAEJ,kBAAC,IAAD,CAAM7E,GAAG,KACL,4BAAQ6B,GAAG,YAAX,oDC2LT5B,sBArMf,WAAwB,IAAD,EACOnB,mBAAS,KADhB,mBACZ2D,EADY,KACLuC,EADK,OAEalG,mBAAS,IAFtB,mBAEZ4D,EAFY,KAEFuC,EAFE,OAGiBnG,mBAAS,IAH1B,mBAGZ6D,EAHY,KAGAuC,EAHA,OAIKpG,mBAAS,IAJd,mBAIZ8D,EAJY,KAINuC,EAJM,KAKbC,EAAmBrE,mBALN,EAMOG,qBAAWlE,EAAS,CAC1CI,SAAS,EACTC,KAAM,KACNC,MAAO,OATQ,mBAMZL,EANY,KAMLkE,EANK,KAWLkE,EAAgBpI,EAAtBI,KAEFiI,EAA4B,WAC9B,IAAIC,GAAU,EACd,IACIF,EAAYhC,KAAI,SAACC,GAKb,OAJIA,EAAEb,QAAU+C,SAAS/C,IAAUa,EAAEP,OAASyC,SAAS9C,IAAaY,EAAEN,iBAAmBwC,SAAS7C,KAC9FyC,EAAiB1D,QAAU4B,EAC3BiC,GAAU,GAEPA,KAEf,MAAOE,IAEP,OAAOF,GAcLG,EAAgB,uCAAG,4BAAA3D,EAAA,6DACrBZ,EAAS,CAAEhE,KAAM,YADI,kBAGM6E,IAAMC,IAAN,UAAazE,EAAb,mBAAsCC,GAH5C,OAGXyE,EAHW,OAIjBf,EAAS,CAAEhE,KAAM,UAAWE,KAAM6E,EAAS7E,OAJ1B,gDAMjB8D,EAAS,CAAEhE,KAAM,QAASG,MAAM,EAAD,KANd,yDAAH,qDAUtB+B,qBAAU,WACNqG,MACD,IAEH,IAyBMC,EAAe,SAACF,GACI,UAAlBA,EAAEG,OAAOhD,KACToC,EAASS,EAAEG,OAAOC,OACO,UAAlBJ,EAAEG,OAAOhD,KAChBqC,EAAYQ,EAAEG,OAAOC,OACI,mBAAlBJ,EAAEG,OAAOhD,KAChBsC,EAAcO,EAAEG,OAAOC,OACE,iBAAlBJ,EAAEG,OAAOhD,MAChBuC,EAAQM,EAAEG,OAAOC,QAInBC,EAAgB,WAOlB,GAAiB,KAAbpD,EACA,OACI,4BAAQE,KAAK,iBAAiBhD,UAAU,sBAAsBiG,MAAOlD,EAAYoD,SAAUJ,GACvF,4BAAQE,MAAM,IAAd,6BAGL,GAAiB,MAAbnD,EAAkB,CAEzB,IADA,IAAMsD,EAAc,GACXC,EAAE,EAAGA,EAAIC,GAAYD,IAC1BD,EAAYG,KAAKF,GAErB,OACI,4BAAQrD,KAAK,iBAAiBhD,UAAU,sBAAsBiG,MAAOlD,EAAYoD,SAAUJ,GACvF,4BAAQE,MAAM,IAAd,4BACCG,EAAY3C,KAAI,SAACC,GACd,OACI,4BAAQ8C,IAAG,UAAK9C,EAAL,UAAWuC,MAAOvC,GAA7B,UAAoCA,EAApC,eAKb,GAAiB,MAAbZ,EAAkB,CAEzB,IADA,IAAMsD,EAAc,GACXC,EAAE,EAAGA,EAAII,GAAYJ,IAC1BD,EAAYG,KAAKF,GAErB,OACI,4BAAQrD,KAAK,iBAAiBhD,UAAU,sBAAsBiG,MAAOlD,EAAYoD,SAAUJ,GACvF,4BAAQE,MAAM,IAAd,4BACCG,EAAY3C,KAAI,SAACC,GACd,OACI,4BAAQ8C,IAAG,UAAK9C,EAAL,UAAWuC,MAAOvC,GAA7B,UAAoCA,EAApC,eAKb,GAAiB,MAAbZ,EAAkB,CAEzB,IADA,IAAMsD,EAAc,GACXC,EAAE,EAAGA,EAAIK,GAAYL,IAC1BD,EAAYG,KAAKF,GAErB,OACI,4BAAQrD,KAAK,iBAAiBhD,UAAU,sBAAsBiG,MAAOlD,EAAYoD,SAAUJ,GACvF,4BAAQE,MAAM,IAAd,4BACCG,EAAY3C,KAAI,SAACC,GACd,OACI,4BAAQ8C,IAAG,UAAK9C,EAAL,UAAWuC,MAAOvC,GAA7B,UAAoCA,EAApC,eAKb,GAAiB,MAAbZ,EAAkB,CAEzB,IADA,IAAMsD,EAAc,GACXC,EAAE,EAAGA,EAAIM,GAAYN,IAC1BD,EAAYG,KAAKF,GAErB,OACI,4BAAQrD,KAAK,iBAAiBhD,UAAU,sBAAsBiG,MAAOlD,EAAYoD,SAAUJ,GACvF,4BAAQE,MAAM,IAAd,4BACCG,EAAY3C,KAAI,SAACC,GACd,OACI,4BAAQ8C,IAAG,UAAK9C,EAAL,UAAWuC,MAAOvC,GAA7B,UAAoCA,EAApC,iBAQxB,OACI,0BAAMzB,GAAG,gBAAgB2E,SAlHR,SAACf,GAElB,GADAA,EAAEgB,iBACY,KAAVhE,EACA7E,EAAa,QAAS,2DAAe,cACjCoB,OAAWA,EAAW,CAAC,WAAY,SAAS,WAAY,UACzD,GAAiB,KAAb0D,EACP9E,EAAa,QAAS,qDAAc,cAChCoB,OAAWA,EAAW,CAAC,WAAY,SAAS,WAAY,UACzD,GAAmB,KAAf2D,EACP/E,EAAa,QAAS,uEAAiB,cACnCoB,OAAWA,EAAW,CAAC,WAAY,SAAS,WAAY,UACzD,GAAa,KAAT4D,EACPhF,EAAa,QAAS,2DAAe,cACjCoB,OAAWA,EAAW,CAAC,WAAY,SAAS,WAAY,UACzD,GAAM,0CAAgC0H,KAAK9D,IAG3C,GAAG0C,IAA6B,CACnC,IAAMqB,EAAcvB,EAAiB1D,QAAQkB,KACvCgE,EAAaxB,EAAiB1D,QAAQmF,WAAWrE,QAAQ,IAAK,KAAKA,QAAQ,UAAW,IAC5F5E,EAAa,QAAD,UAAa+I,EAAb,oGAA8CC,GAAc,cACpE5H,OAAWA,EAAW,CAAC,WAAY,SAAS,WAAY,WAN5DpB,EAAa,GAAI,4HAAwC,YACrDoB,OAAWA,EAAW,CAAC,WAAY,SAAS,WAAY,OAmG5D,yBAAKY,UAAU,gBACX,4BAAQgD,KAAK,QAAQhD,UAAU,aAAaiG,MAAOpD,EAAOsD,SAAUJ,GAChE,4BAAQE,MAAM,IAAd,gBACA,4BAAQA,MAAM,KAAd,kBAEJ,4BAAQjD,KAAK,QAAQhD,UAAU,aAAaiG,MAAOnD,EAAUqD,SAAUJ,GACnE,4BAAQE,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,YAEJ,kBAACC,EAAD,OAEJ,2BAAO3I,KAAK,OAAOyF,KAAK,eAAehD,UAAU,eAAekH,YAAY,eAAKjB,MAAOjD,EAAMmD,SAAUJ,IAzJ9F,KAAVlD,GAA6B,KAAbC,GAAkC,KAAfC,GAA8B,KAATC,GAGzD0C,MAES,0CAAgCoB,KAAK9D,GA8JvC,4BAAQf,GAAG,aAAX,4BARA,kBAAC,IAAD,CAAM7B,GAAI,CACR0E,SAAU,QACVzH,MAAO,CACHwF,MAAO+C,SAAS/C,GAChBC,SAAU8C,SAAS9C,GACnBC,WAAY6C,SAAS7C,GACrBC,KAAMA,KACN,4BAAQf,GAAG,aAAX,iCChLjB,SAASkD,IACZ,OACI,gCACI,yBAAKnF,UAAU,cACX,yBAAKiC,GAAG,YAAR,kBAMhB,SAASkF,IACL,OACI,yBAAKnH,UAAU,aACX,kBAAC,IAAD,MACA,kBAACmF,EAAD,MACA,yBAAKnF,UAAU,QACX,yBAAKoH,IAAKC,EAAQ,KAAgBpF,GAAG,WAAWqF,IAAI,4BACpD,yBAAKrF,GAAG,YACJ,iHAAqB,6BAArB,8GAGA,4BACI,iJACA,gIACA,uGAGR,yBAAKjC,UAAU,YACX,kBAAC,EAAD,SAOLuH,MAhDf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,UAAUC,UAAWxC,IACjC,kBAAC,IAAD,CAAOuC,KAAK,QAAQC,UAAWC,IAC/B,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,IAAIC,UAAWxH,OCVjD0H,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SXwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5D,MAAK,SAAA6D,GACJA,EAAaC,gBAEdC,OAAM,SAAA5K,GACLsG,QAAQtG,MAAMA,EAAMiB,a","file":"static/js/main.5e70f226.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quiz.c7c99d7b.jpeg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","function reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                loading: true,\r\n                data: null,\r\n                error: null\r\n            };\r\n        case 'SUCCESS':\r\n            return {\r\n                loading: false,\r\n                data: action.data,\r\n                error: null\r\n            };\r\n        case 'ERROR':\r\n            return {\r\n                loading: false,\r\n                data: null,\r\n                error: action.error\r\n            };\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nexport default reducer;","// token 생성 2020-09-15 16:23 => 7일간 유효.\r\nconst token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImVuZ19xdWl6IiwiZXhwIjoxNjAwNzU5NDE3LCJlbWFpbCI6IiIsIm9yaWdfaWF0IjoxNjAwMTU0NDAwfQ.nVFS4BQV4MN8N_eJ3lM7QDNyJyOgd7UHJ9SPegdh0AQ';\r\nexport const apiUrl = 'http://csbcool.asuscomm.com:8000/api';\r\nexport const config = {\r\n    headers: {Authorization: `JWT ${token}`}\r\n}","import { store } from \"react-notifications-component\";\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport 'animate.css/animate.compat.css'\r\n\r\nconst notification = (_title, _message, _type,\r\n                      _container = 'bottom-center',\r\n                      _animationIn= ['animated', 'fadeIn'],\r\n                      _animationOut = ['animated', 'faster','fadeOut'],\r\n                      _duration= 1000) => {\r\n\r\n    store.addNotification({\r\n        title: _title,\r\n        message: _message,\r\n        type: _type,                         // 'default', 'success', 'info', 'warning'\r\n        container: _container,                // where to position the notifications\r\n        animationIn: _animationIn,     // animate.css classes that's applied\r\n        animationOut: _animationOut,   // animate.css classes that's applied\r\n        dismiss: {\r\n            duration: _duration\r\n        }\r\n    });\r\n}\r\n\r\nexport default notification;","import { useEffect, useState } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n        calWidth: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                calWidth: (window.innerWidth * 0.5) + 166,\r\n            });\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import React from \"react\";\r\nimport './static/css/page_error.css';\r\nimport useWindowSize from \"./components/useWindowSize\";\r\n\r\n\r\nfunction TimeOutPage() {\r\n    const width = useWindowSize().width\r\n    const height = useWindowSize().height\r\n\r\n    return(\r\n        <div className='body_408' style={{width: width, height: height}}>\r\n            <div className='container_408 h'>\r\n                <h1>408 Time Out</h1>\r\n                <p className=\"zoom-area\"><b>앗!</b> 서버와의 연결시간이 초과되었습니다.</p>\r\n                <section className=\"error-container\">\r\n                    <span className=\"four\"><span className=\"screen-reader-text\">4</span></span>\r\n                    <span className=\"zero\"><span className=\"screen-reader-text\">0</span></span>\r\n                    <span className=\"eight\">\r\n                        <span className=\"eight_\"></span>\r\n                        <span className=\"screen-reader-text\">8</span>\r\n                    </span>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeOutPage;","import React from \"react\";\r\nimport './static/css/page_error.css';\r\nimport useWindowSize from \"./components/useWindowSize\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction NotFoundPage({ history }) {\r\n    const width = useWindowSize().width\r\n    const height = useWindowSize().height\r\n\r\n    return(\r\n        <div className='body_404' style={{width: width, height: height}}>\r\n            <div className='container_404 h'>\r\n                <h1>404 Error Page</h1>\r\n                <p className=\"zoom-area\"><b>앗!</b> 찾으시는 페이지를 찾을 수 없습니다.</p>\r\n                <section className=\"error-container\">\r\n                    <span className=\"four\"><span className=\"screen-reader-text\">4</span></span>\r\n                    <span className=\"zero\"><span className=\"screen-reader-text\">0</span></span>\r\n                    <span className=\"four\"><span className=\"screen-reader-text\">4</span></span>\r\n                </section>\r\n                <div className=\"link-container\">\r\n                    <Link to='/'>\r\n                        <button className=\"more-link\">홈으로 돌아가기</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","import React, {memo, useCallback, useEffect, useReducer, useRef, useState} from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiUrl, config } from \"./HttpMethod\";\r\nimport notification from \"./notification\";\r\nimport ReactNotifications from \"react-notifications-component\";\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport TimeOutPage from \"./TimeOutPage\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\n\r\n\r\nfunction QuizData({ history, location }) {\r\n    const [checkNum, setCheckNum] = useState(undefined);\r\n    const [index, setIndex] = useState(0);\r\n    const [correctCount, setCorrectCount] = useState(0);\r\n    const [isEnd, setIsEnd] = useState(false);\r\n    const [result, setResult] = useState([]);\r\n    const [resultData, setResultData] = useState([]);\r\n    const startTime = useRef(new Date());\r\n    const endTime = useRef({});\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        loading: false,\r\n        data: null,\r\n        error: null\r\n    });\r\n    const [postState, postDispatch] = useReducer(reducer, {\r\n        loading: false,\r\n        data: null,\r\n        error: null\r\n    });\r\n    const project_id = 1; // 진행하고 싶은 프로젝트 아이디를 설정\r\n\r\n    const chkAnswer = () => {\r\n        if (quizData[index].correct_answer === checkNum) {\r\n            const runTime = (endTime.current - startTime.current) / 1000;\r\n            setResult([...result, [quizData[index].question, `${checkNum}) ${quizData[index].answers[checkNum - 1]}`, \"True\", runTime]])\r\n            setResultData([...resultData, [quizData[index].id, `${checkNum}) ${quizData[index].answers[checkNum - 1]}`, \"True\", runTime]])\r\n            setCorrectCount(correctCount + 1);\r\n            // console.log(`소요시간: ${runTime}초`)\r\n        } else {\r\n            const runTime = (endTime.current - startTime.current) / 1000;\r\n            setResult([...result, [quizData[index].question, `${checkNum}) ${quizData[index].answers[checkNum - 1]}`, \"False\", runTime]])\r\n            setResultData([...resultData, [quizData[index].id, `${checkNum}) ${quizData[index].answers[checkNum - 1]}`, \"False\", runTime]])\r\n            // console.log(`소요시간: ${runTime}초`)\r\n        }\r\n    }\r\n\r\n    const fetchQuiz = async () => {\r\n        dispatch({ type: 'LOADING' });\r\n        try {\r\n            const response = await axios.get(`${apiUrl}/quiz/data/?project=${project_id}`, config);\r\n            dispatch({ type: 'SUCCESS', data: response.data });\r\n        } catch (e) {\r\n            dispatch({ type: 'ERROR', error: e });\r\n        }\r\n    };\r\n\r\n    const delay = (item) => {\r\n        return new Promise(resolve =>\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000)\r\n        );\r\n    }\r\n\r\n    const postResult = useCallback(async () => {\r\n        // id: 1, selectedAnswer: 4. 간단한, isCorrect: false, runTime: 0.993 => 포멧 변경\r\n        const eachQuizTime = JSON.stringify([['id,selectedAnswer,isCorrect,runTime'], ...resultData])\r\n            .replace(/],/g, '\\n').replace(/[[\\]\"]/g, '').replace(/,/g, ', ');\r\n        try {\r\n            const {grade, classNum, studentNum, name} = location.state;\r\n            const response = await axios.post(`${apiUrl}/students/data/`,\r\n                {\r\n                    project: project_id,\r\n                    grade: grade,\r\n                    room: classNum,\r\n                    student_number: studentNum,\r\n                    name: name,\r\n                    score: correctCount,\r\n                    each_quiz_time: eachQuizTime,\r\n                    total_end_time: parseFloat(result.map((v) => v[3]).reduce((a, c) => a + c).toFixed(2)),\r\n                }\r\n                , config);\r\n            // console.log('student id: ', response.data.id);\r\n            postDispatch({ type: 'LOADING' });\r\n            for (const item of result) {\r\n                // await delay(postResultDetail(item, response.data.id));\r\n                await postResultDetail(item, response.data.id);\r\n            }\r\n            postDispatch({ type: 'SUCCESS' });\r\n            console.log('done.')\r\n            notification('정상적으로 제출되었습니다.', '수고하셨습니다.', 'info',\r\n                                    'bottom-center', ['animated', 'bounceIn'], ['animated', 'faster', 'bounceOut'], 3000);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, [correctCount, location.state, result, resultData]);\r\n\r\n    const postResultDetail = async (v, id) => {\r\n        console.log('전송 중..', v[0])\r\n        try {\r\n            await axios.post(`${apiUrl}/students/data/detail/`,\r\n                {\r\n                    student_data: id,\r\n                    question: v[0],\r\n                    selected_answer: v[1],\r\n                    isCorrect: String(v[2]),\r\n                    runtime: v[3]\r\n                }\r\n                , config);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchQuiz().then();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(isEnd) {\r\n            postResult().then();\r\n        }\r\n    },[isEnd, postResult]);\r\n\r\n    const Answers = () => {\r\n        const checkedColor = {backgroundColor: 'rebeccapurple', color: 'white'};\r\n        const unCheckedColor = {backgroundColor: 'white', color: 'black'};\r\n\r\n        return (\r\n            <div className='answers'>\r\n                <div id=\"answer1\"\r\n                     onClick={() => {setCheckNum(1)}}\r\n                     style={checkNum === 1\r\n                         ? checkedColor\r\n                         : unCheckedColor}>{`1. ${quizData[index].answers[0]}`}\r\n                </div>\r\n                <div id=\"answer2\"\r\n                     onClick={() => {setCheckNum(2)}}\r\n                     style={checkNum === 2\r\n                         ? checkedColor\r\n                         : unCheckedColor}>{`2. ${quizData[index].answers[1]}`}\r\n                </div>\r\n                <div id=\"answer3\"\r\n                     onClick={() => {setCheckNum(3)}}\r\n                     style={checkNum === 3\r\n                         ? checkedColor\r\n                         : unCheckedColor}>{`3. ${quizData[index].answers[2]}`}\r\n                </div>\r\n                <div id=\"answer4\"\r\n                     onClick={() => {setCheckNum(4)}}\r\n                     style={checkNum === 4\r\n                         ? checkedColor\r\n                         : unCheckedColor}>{`4. ${quizData[index].answers[3]}`}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const { loading, data: quizData, error } = state;\r\n    if (location.state === undefined) {\r\n        return <NotFoundPage />;\r\n    }\r\n    // const { grade, classNum, studentNum, name } = location.state;\r\n\r\n    if (loading) return <div><LoopCircleLoading color='rebeccapurple' /></div>;\r\n    if (error) return <TimeOutPage />;\r\n    if (!quizData) return null;\r\n\r\n    // console.log(resultData);\r\n\r\n    // console.log('index 상태: ', index);\r\n    // console.log('맞은 갯수: ', correctCount);\r\n    // console.log('타이틀: ', quizData[index].title);\r\n    // console.log(location.state);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='contents'>\r\n                <div className=\"contents_box\">\r\n                    <div className=\"problem_num\"><h2>{`Quiz - ${index+1}`}</h2></div>\r\n                    <div className='problem_title'><h3>{quizData[index].question}</h3></div>\r\n                    <Answers />\r\n                </div>\r\n                <ReactNotifications />\r\n                {postState.loading ? <div><LoopCircleLoading color='rebeccapurple' /></div> : undefined}\r\n                {isEnd && postState.loading\r\n                    ? <button className='next_btn loading_btn' >다음 문제</button>\r\n                    : isEnd\r\n                        ? <Link to={{\r\n                            pathname: '/result',\r\n                            state: {\r\n                                quizRound: quizData.length,\r\n                                score: correctCount,\r\n                                totalTime: parseFloat(result.map((v) => v[3]).reduce((a, c) => a + c).toFixed(2))\r\n                            }\r\n                        }}>\r\n                            <button className='next_btn result_btn' onClick={() => history.replace({ state: undefined })}>결과 확인</button>\r\n                        </Link>\r\n                        : <button className='next_btn' onClick={() => {\r\n                            if (checkNum === undefined) {\r\n                                notification('', '답을 선택해주세요.', 'danger',\r\n                                    'bottom-center', ['animated', 'bounceIn'], ['animated', 'faster', 'bounceOut'], 1000);\r\n                            } else {\r\n                                if (index === quizData.length - 1) {\r\n                                    endTime.current = new Date();\r\n                                    chkAnswer();\r\n                                    setIsEnd(true);\r\n                                    notification('서버로 전송 중..', '잠시만 기다려주세요.', 'info',\r\n                                        'bottom-center', ['animated', 'bounceIn'], ['animated', 'faster', 'bounceOut'], 3000);\r\n                                } else {\r\n                                    endTime.current = new Date();\r\n                                    chkAnswer();\r\n                                    startTime.current = new Date()\r\n                                    setIndex(index + 1);\r\n                                    setCheckNum(undefined);\r\n                                }\r\n                            }\r\n                        }}>다음 문제</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(QuizData);","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Header } from \"./Quiz\";\r\n\r\nfunction Result({ location }) {\r\n    const { score, quizRound, totalTime } = location.state;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Header />\r\n            <div className='result'>\r\n                <div className=\"result_box\">\r\n                    <div className=\"inner\">\r\n                        <h2>수고하셨습니다!</h2>\r\n                        <div>{`${score} / ${quizRound}`}</div>\r\n                        <div>{`총 소요시간: ${totalTime}초`}</div>\r\n                    </div>\r\n                    <Link to='/'>\r\n                        <button id='home_btn'>홈으로 돌아가기</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React, {useState, memo, useReducer, useEffect, useRef} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport notification from \"./notification\";\r\nimport reducer from \"./reducer\";\r\nimport axios from \"axios\";\r\nimport { apiUrl, config } from \"./HttpMethod\";\r\n\r\n\r\nfunction StudentInfo() {\r\n    const [grade, setGrade] = useState('3');\r\n    const [classNum, setClassNum] = useState('');\r\n    const [studentNum, setStudentNum] = useState('');\r\n    const [name, setName] = useState('');\r\n    const submittedStudent = useRef();\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        loading: false,\r\n        data: null,\r\n        error: null\r\n    });\r\n    const { data: studentData } = state;\r\n\r\n    const isStudentDataAlreadyThere = () => {\r\n        let isThere = false;\r\n        try {\r\n            studentData.map((v) => {\r\n                if (v.grade === parseInt(grade) && v.room === parseInt(classNum) && v.student_number === parseInt(studentNum)) {\r\n                    submittedStudent.current = v;\r\n                    isThere = true;\r\n                }\r\n                return isThere; // 경고 메세지 때문에 이유없이 그냥 리턴 해줌.\r\n            })}\r\n        catch (e) {\r\n        }\r\n        return isThere;\r\n    };\r\n\r\n    const chkForm = () => {\r\n        if (grade === '' && classNum === '' && studentNum === '' && name === '') {\r\n            return false;\r\n        }\r\n        if(isStudentDataAlreadyThere()) {\r\n            return false;\r\n        } else if ((/^[가-힣]{2,4}$|^[a-zA-Z]{2,10}$/.test(name))) {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const fetchStudentData = async () => {\r\n        dispatch({ type: 'LOADING' });\r\n        try {\r\n            const response = await axios.get(`${apiUrl}/students/data/`, config);\r\n            dispatch({ type: 'SUCCESS', data: response.data });\r\n        } catch (e) {\r\n            dispatch({ type: 'ERROR', error: e });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchStudentData();\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (grade === '') {\r\n            notification('Error', '학년을 선택해주세요.', 'danger',\r\n                undefined, undefined, ['animated', 'faster','zoomOut'], 2000);\r\n        } else if (classNum === '') {\r\n            notification('Error', '반을 선택해주세요.', 'danger',\r\n                undefined, undefined, ['animated', 'faster','zoomOut'], 2000);\r\n        } else if (studentNum === '') {\r\n            notification('Error', '출석번호를 입력해주세요.', 'danger',\r\n                undefined, undefined, ['animated', 'faster','zoomOut'], 2000);\r\n        } else if (name === '') {\r\n            notification('Error', '이름을 입력해주세요.', 'danger',\r\n                undefined, undefined, ['animated', 'faster','zoomOut'], 2000);\r\n        } else if (!(/^[가-힣]{2,4}$|^[a-zA-Z]{2,10}$/.test(name))) {\r\n            notification('', '한글은 2 ~ 4자, 영문은 2 ~ 10자 까지 입력 가능합니다.', 'info',\r\n                undefined, undefined, ['animated', 'faster','zoomOut'], 2000);\r\n        } else if(isStudentDataAlreadyThere()) {\r\n            const studentName = submittedStudent.current.name;\r\n            const createTime = submittedStudent.current.created_at.replace(/T/, ' ').replace(/\\.\\d{6}/, '');\r\n            notification('Error', `${studentName} 학생은 이미 제출하였습니다. 　　${createTime}`, 'danger',\r\n                undefined, undefined, ['animated', 'faster','zoomOut'], 4000);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.name === 'grade') {\r\n            setGrade(e.target.value);\r\n        } else if (e.target.name === 'class') {\r\n            setClassNum(e.target.value);\r\n        } else if (e.target.name === 'student_number') {\r\n            setStudentNum(e.target.value);\r\n        } else if (e.target.name === 'student_name') {\r\n            setName(e.target.value);\r\n        }\r\n    };\r\n\r\n    const ChkStudentNum = () => {\r\n        // 1반부터 4반까지 각각 학생 수\r\n        const class1 = 21;\r\n        const class2 = 20;\r\n        const class3 = 21;\r\n        const class4 = 21;\r\n\r\n        if (classNum === '') {\r\n            return (\r\n                <select name=\"student_number\" className='student_number info' value={studentNum} onChange={handleChange}>\r\n                    <option value=\"\">출석번호</option>\r\n                </select>\r\n            );\r\n        } else if (classNum === '1') {\r\n            const studentNums = [];\r\n            for (let i=1; i < class1 + 1; i++) {\r\n                studentNums.push(i);\r\n            }\r\n            return(\r\n                <select name=\"student_number\" className='student_number info' value={studentNum} onChange={handleChange}>\r\n                    <option value=\"\">출석번호</option>\r\n                    {studentNums.map((v) => {\r\n                        return(\r\n                            <option key={`${v}번`} value={v}>{`${v}번`}</option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            );\r\n        } else if (classNum === '2') {\r\n            const studentNums = [];\r\n            for (let i=1; i < class2 + 1; i++) {\r\n                studentNums.push(i);\r\n            }\r\n            return(\r\n                <select name=\"student_number\" className='student_number info' value={studentNum} onChange={handleChange}>\r\n                    <option value=\"\">출석번호</option>\r\n                    {studentNums.map((v) => {\r\n                        return(\r\n                            <option key={`${v}번`} value={v}>{`${v}번`}</option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            );\r\n        } else if (classNum === '3') {\r\n            const studentNums = [];\r\n            for (let i=1; i < class3 + 1; i++) {\r\n                studentNums.push(i);\r\n            }\r\n            return(\r\n                <select name=\"student_number\" className='student_number info' value={studentNum} onChange={handleChange}>\r\n                    <option value=\"\">출석번호</option>\r\n                    {studentNums.map((v) => {\r\n                        return(\r\n                            <option key={`${v}번`} value={v}>{`${v}번`}</option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            );\r\n        } else if (classNum === '4') {\r\n            const studentNums = [];\r\n            for (let i=1; i < class4 + 1; i++) {\r\n                studentNums.push(i);\r\n            }\r\n            return(\r\n                <select name=\"student_number\" className='student_number info' value={studentNum} onChange={handleChange}>\r\n                    <option value=\"\">출석번호</option>\r\n                    {studentNums.map((v) => {\r\n                        return(\r\n                            <option key={`${v}번`} value={v}>{`${v}번`}</option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form id=\"info_selector\" onSubmit={handleSubmit}>\r\n            <div className=\"student_info\">\r\n                <select name=\"grade\" className='grade info' value={grade} onChange={handleChange}>\r\n                    <option value=\"\">학년</option>\r\n                    <option value=\"3\">3학년</option>\r\n                </select>\r\n                <select name=\"class\" className='class info' value={classNum} onChange={handleChange}>\r\n                    <option value=\"\">반</option>\r\n                    <option value=\"1\">1반</option>\r\n                    <option value=\"2\">2반</option>\r\n                    <option value=\"3\">3반</option>\r\n                    <option value=\"4\">4반</option>\r\n                </select>\r\n                <ChkStudentNum />\r\n            </div>\r\n            <input type=\"text\" name='student_name' className='student_name' placeholder='이름' value={name} onChange={handleChange} />\r\n            {chkForm()\r\n                ? <Link to={{\r\n                    pathname: '/quiz',\r\n                    state: {\r\n                        grade: parseInt(grade),\r\n                        classNum: parseInt(classNum),\r\n                        studentNum: parseInt(studentNum),\r\n                        name: name\r\n                    }}}><button id='start_btn'>시작하기</button></Link>\r\n                : <button id='start_btn'>시작하기</button>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default memo(StudentInfo);","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport './static/css/Quiz.css';\r\nimport QuizData from \"./QuizData\";\r\nimport Result from \"./Result\";\r\nimport StudentInfo from \"./StudentInfo\";\r\nimport ReactNotifications from \"react-notifications-component\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\n\r\n\r\nfunction Quiz() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/result\" component={Result} />\r\n                <Route path=\"/quiz\" component={QuizData} />\r\n                <Route exact path=\"*\" component={NotFoundPage} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport function Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"header_box\">\r\n                <div id=\"app_name\">English Quiz</div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className='container'>\r\n            <ReactNotifications />\r\n            <Header />\r\n            <div className='home'>\r\n                <img src={require(\"./quiz.jpeg\")} id='quiz_img' alt=\"Quiz 이미지\"/>\r\n                <div id=\"home_box\">\r\n                    <h3>퀴즈를 풀기 전 안내사항입니다.<br/>\r\n                        안내사항을 읽고 시작하기를 눌러주세요.</h3>\r\n                    {/*<h3>{`가로: ${width}, 높이: ${height}`}</h3>*/}\r\n                    <ul>\r\n                        <li>긴장하지 말고 즐거운 마음으로 풀어보세요!</li>\r\n                        <li>단어를 잘 보고 알맞은 뜻을 고르세요.</li>\r\n                        <li>만점을 향해 도전해보세요.</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"info_box\">\r\n                    <StudentInfo />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Quiz from \"./Quiz\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Quiz />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}